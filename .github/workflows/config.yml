name: UI Tests

on: [push]

jobs:
  ui-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v2

      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: ./.github/gh-pages

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Run UI-tests via docker-compose
        env:
          LOGIN: ${{ secrets.LOGIN }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          docker-compose up --exit-code-from regression || true

      - name: Prepare Allure history
        run: |
          sudo mkdir -p allure-results/history
          if [ -d "./.github/gh-pages/history" ] && [ "$(ls -A ./.github/gh-pages/history)" ]; then
            sudo cp -R ./.github/gh-pages/history/* allure-results/history/
          else
            echo "No history files to copy."
          fi

      - name: Verify Allure installation
        run: |
          docker-compose run regression /bin/sh -c "allure --version"

      - name: Generate Allure report
        run: |
          docker-compose run regression /bin/sh -c "allure generate allure-results --clean -o allure-report"

      - name: Update Allure history
        run: |
          if [ -d "allure-report/history" ] && [ "$(ls -A allure-report/history)" ]; then
            sudo cp -R allure-report/history/* ./.github/gh-pages/history/
          else
            echo "No new history files to update."
          fi

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.CI_TOKEN }}
          branch: gh-pages
          folder: allure-report
          clean: true
